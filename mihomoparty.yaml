### 全局配置
mixed-port: 7890
allow-lan: true
mode: rule
log-level: warning
ipv6: true
find-process-mode: strict
### 如果使用的是裸核，需要将下面的注释去掉，方便ui界面的使用
# external-controller: 0.0.0.0:9988
# external-ui: ui
# external-ui-url: 'https://mirror.ghproxy.com/https://github.com/Zephyruso/zashboard/releases/latest/download/dist.zip'
# secret: "yyhhyyyyyy"
profile:
  store-selected: true
  store-fake-ip: true
unified-delay: true
tcp-concurrent: true
global-client-fingerprint: chrome

### DNS配置
dns:
  enable: true
  prefer-h3: true
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  # fake-ip-filter start
  fake-ip-filter:
    - +.+m2m
    - +.$injections.adguard.org
    - +.$local.adguard.org
    - +.+bogon
    - +.+lan
    - +.+localdomain
    - +.home.arpa
    - dns.msftncsi.com
    - "*.srv.nintendo.net"
    - "*.stun.playstation.net"
    - xbox.*.microsoft.com
    - "*.xboxlive.com"
    - "*.turn.twilio.com"
    - "*.stun.twilio.com"
    - stun.syncthing.net
    - stun.*
    - "*.sslip.io"
    - "*.nip.io"
  # fake-ip-filter end
  respect-rules: true
  nameserver:
    - https://223.5.5.5/dns-query
    - https://doh.pub/dns-query
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
    - https://doh.pub/dns-query

### 域名嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"
    - "+.push.apple.com"

### Tunnel配置
tun:
  enable: true
  stack: system
  device: Ethernet 99
  auto-route: true
  auto-detect-interface: true
  dns-hijack:
    - any:53
    - tcp://any:53
  strict-route: true
  mtu: 1500
  # 如果有使用zerotier或者headscale等，需要自己配置排除自己的网段
  # route-exclude-address: ["192.168.110.0/24"]


### 节点配置
NodeParam: &NodeParam {type: http, interval: 86400, health-check: {enable: true, url: 'http://www.gstatic.com/generate_204', interval: 300}}
# 节点订阅
proxy-providers: 
  p1:
    url: 'http://127.0.0.1:38324/download/1ff'
    <<: *NodeParam
    path: './proxy_provider/providers1.yaml'
  p2:
     url: 'http://127.0.0.1:38324/download/hneko'
     <<: *NodeParam
     path: './proxy_provider/providers2.yaml'
  p3:
     url: 'http://127.0.0.1:38324/download/hk'
     <<: *NodeParam
     path: './proxy_provider/providers3.yaml'  
  # p4:
  #    url: 'http://127.0.0.1:38324/download/hk'
  #    <<: *NodeParam
  #    path: './proxy_provider/providers4.yaml'  
  # p5:
  #    url: 'http://127.0.0.1:38324/download/hk'
  #    <<: *NodeParam
  #    path: './proxy_provider/providers5.yaml'       
proxy-groups:
    - {name: 🇭🇰香港策略, type: select, proxies: [香港时延优选策略组, 香港故障转移策略组, 香港负载均衡策略组]}
    - {name: 🇹🇼台湾策略, type: select, proxies: [台湾时延优选策略组, 台湾故障转移策略组, 台湾负载均衡策略组]}
    - {name: 🇯🇵日本策略, type: select, proxies: [日本时延优选策略组, 日本故障转移策略组, 日本负载均衡策略组]}
    - {name: 🇰🇷韩国策略, type: select, proxies: [韩国时延优选策略组, 韩国故障转移策略组, 韩国负载均衡策略组]}
    - {name: 🇸🇬新加坡策略, type: select, proxies: [新加坡时延优选策略组, 新加坡故障转移策略组, 新加坡负载均衡策略组]}
    - {name: 🇺🇸美国策略, type: select, proxies: [美国时延优选策略组, 美国故障转移策略组, 美国负载均衡策略组]}
    - {name: 🇬🇧英国策略, type: select, proxies: [英国时延优选策略组, 英国故障转移策略组, 英国负载均衡策略组]}
  #分流分组
    - {name: 手动切换, type: select, include-all: true, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Static.png }
    - {name: 手动切换2, type: select, include-all: true, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Static.png }
    - {name: 全球加速, type: select, proxies: [🇯🇵日本策略,手动切换, 手动切换2,DIRECT, 🇭🇰香港策略,  🇹🇼台湾策略, 🇺🇸美国策略, 🇸🇬新加坡策略], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png }
    - {name: Netflix,  type: select, proxies: [🇭🇰香港策略,🇹🇼台湾策略, 🇸🇬新加坡策略, 全球加速,🇰🇷韩国策略,手动切换,手动切换2],icon: https://fastly.jsdelivr.net/gh/shindgewongxj/WHATSINStash@master/icon/netflix.png}
    - {name: Microsoft,   type: select, proxies: [DIRECT,全球加速,🇰🇷韩国策略,🇯🇵日本策略, 🇭🇰香港策略, 🇺🇸美国策略, 🇹🇼台湾策略, 🇸🇬新加坡策略, 手动切换,手动切换2],icon: https://clash-verge-rev.github.io/assets/icons/microsoft.svg}
    - {name: Tiktok, type: select, proxies: [🇯🇵日本策略, 🇭🇰香港策略,  🇺🇸美国策略, 🇹🇼台湾策略, 🇸🇬新加坡策略, 手动切换,DIRECT,手动切换2],icon: https://clash-verge-rev.github.io/assets/icons/tiktok.svg }
    - {name: 哔哩哔哩, type: select, proxies: [DIRECT, 🇯🇵日本策略,🇭🇰香港策略, 手动切换,🇹🇼台湾策略,手动切换2], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/bilibili.png }
    - {name: Wechat, type: select, proxies: [DIRECT, 🇯🇵日本策略,🇭🇰香港策略, 手动切换,🇹🇼台湾策略,手动切换2], icon: https://raw.githubusercontent.com/Phinsin-personal/phinsin-personal-rules/refs/heads/main/Icon/wechat.png }
    # - {name: OpenAi,   type: select, proxies: [🇺🇸美国策略, 手动切换,全球加速,🇰🇷韩国策略,手动切换2], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png }
    - {name: OpenAi,   type: url-test, use: [p1,p2],filter: '🇺🇸|美|US|(?i)States|American', icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png }
    - {name: Twitter, type: select, proxies: [全球加速,🇰🇷韩国策略,🇯🇵日本策略, 🇭🇰香港策略, 🇺🇸美国策略, 🇹🇼台湾策略, 🇸🇬新加坡策略, 手动切换, DIRECT,手动切换2],icon: https://fastly.jsdelivr.net/gh/shindgewongxj/WHATSINStash@master/icon/twitter.png}
    - {name: Youtube,   type: select, proxies: [全球加速,🇰🇷韩国策略,🇯🇵日本策略, 🇭🇰香港策略, 🇺🇸美国策略, 🇹🇼台湾策略, 🇸🇬新加坡策略, 手动切换, DIRECT,手动切换2],icon: https://clash-verge-rev.github.io/assets/icons/youtube.svg}
    - {name: XiaoHongShu,   type: select, proxies: [ DIRECT,全球加速,🇰🇷韩国策略,🇯🇵日本策略, 🇭🇰香港策略, 🇺🇸美国策略, 🇹🇼台湾策略, 🇸🇬新加坡策略, 手动切换,手动切换2],icon: https://raw.githubusercontent.com/Phinsin-personal/phinsin-personal-rules/refs/heads/main/Icon/XiaoHongShu.png}
    - {name: Paypal,   type: select, proxies: [🇺🇸美国策略, 手动切换,全球加速,🇰🇷韩国策略,手动切换2], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/PayPal.png }
    - {name: hanime1,  type: select, proxies: [🇭🇰香港策略,🇹🇼台湾策略, 全球加速,🇰🇷韩国策略,手动切换,手动切换2],icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Taiwan.png}
    - {name: WebsiteRulesOrDirect,  type: select, proxies: [DIRECT,  全球加速,🇰🇷韩国策略,🇯🇵日本策略, 🇭🇰香港策略,  🇺🇸美国策略, 🇹🇼台湾策略, 🇸🇬新加坡策略, 手动切换,手动切换2], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/China.png}
    - {name: WebsiteRulesOrGlobal,  type: select, proxies: [全球加速,🇰🇷韩国策略,手动切换, DIRECT, 🇭🇰香港策略, 🇯🇵日本策略, 🇹🇼台湾策略, 🇺🇸美国策略, 🇸🇬新加坡策略,手动切换2],icon: https://fastly.jsdelivr.net/gh/shindgewongxj/WHATSINStash@master/icon/categoryglobe.png}
    - {name: 电报消息, type: select, proxies: [全球加速,🇰🇷韩国策略,手动切换, DIRECT, 🇭🇰香港策略, 🇯🇵日本策略, 🇹🇼台湾策略, 🇺🇸美国策略, 🇸🇬新加坡策略,手动切换2], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Telegram.png }
    # - {name: 游戏平台, type: select, proxies: [DIRECT, 手动切换, 🇭🇰香港策略, 🇯🇵日本策略, 🇹🇼台湾策略, 🇺🇸美国策略, 🇸🇬新加坡策略,手动切换2], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/GAME.png }
    - {name: Spotify,   type: select, proxies: [全球加速,🇰🇷韩国策略,手动切换, DIRECT,🇭🇰香港策略, 🇯🇵日本策略, 🇹🇼台湾策略, 🇺🇸美国策略, 🇸🇬新加坡策略,手动切换2], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Spotify.png}
    - {name: steam,   type: select, proxies: [全球加速,🇰🇷韩国策略,DIRECT, 🇭🇰香港策略, 🇹🇼台湾策略, 手动切换,手动切换2],icon: https://clash-verge-rev.github.io/assets/icons/steam.svg}
    - {name: steamCN,   type: select, proxies: [DIRECT, 🇭🇰香港策略, 🇹🇼台湾策略, 全球加速,🇰🇷韩国策略,手动切换,手动切换2],icon: https://clash-verge-rev.github.io/assets/icons/steam.svg}
    - {name: Xbox,   type: select, proxies: [全球加速,🇰🇷韩国策略,DIRECT, 🇭🇰香港策略, 🇹🇼台湾策略, 手动切换,手动切换2],icon: https://raw.githubusercontent.com/Phinsin-personal/phinsin-personal-rules/refs/heads/main/Icon/xbox.png}
    - {name: Epic, type: select, proxies: [DIRECT,  全球加速,🇰🇷韩国策略,🇯🇵日本策略, 🇭🇰香港策略,  🇺🇸美国策略, 🇹🇼台湾策略, 🇸🇬新加坡策略, 手动切换,手动切换2], icon: https://clash-verge-rev.github.io/assets/icons/epic.svg}
    - {name: EA, type: select, proxies: [ 全球加速,🇰🇷韩国策略,DIRECT, 🇯🇵日本策略, 🇭🇰香港策略,  🇺🇸美国策略, 🇹🇼台湾策略, 🇸🇬新加坡策略, 手动切换,手动切换2], icon: https://raw.githubusercontent.com/Phinsin-personal/phinsin-personal-rules/refs/heads/main/Icon/Electronic%20Arts.png}
    - {name: 苹果服务, type: select, proxies: [DIRECT, 手动切换, 🇭🇰香港策略, 🇯🇵日本策略, 🇹🇼台湾策略, 🇺🇸美国策略, 🇸🇬新加坡策略,手动切换2], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple.png }
    - {name: 兜底分流, type: select, proxies: [全球加速,🇰🇷韩国策略,手动切换, DIRECT, 🇭🇰香港策略, 🇯🇵日本策略, 🇹🇼台湾策略, 🇺🇸美国策略, 🇸🇬新加坡策略,手动切换2], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png }
    
  #节点分组

# 时延优选策略组
    - {name: 香港时延优选策略组, type: url-test, include-all: true, interval: 600, tolerance: 50, filter: "🇭🇰|港|HK|(?i)Hong"}
    - {name: 台湾时延优选策略组, type: url-test, include-all: true, interval: 600, tolerance: 50, filter: "🇹🇼|台|湾|TW|(?i)Taiwan"}
    - {name: 日本时延优选策略组, type: url-test, include-all: true, interval: 600, tolerance: 50, filter: "🇯🇵|日|东京|JP|(?i)Japan"}
    - {name: 韩国时延优选策略组, type: url-test, include-all: true, interval: 600, tolerance: 50, filter: "🇰🇷|韩国|韓|首尔|(?i)KR|Korea"}
    - {name: 新加坡时延优选策略组, type: url-test, include-all: true, interval: 600, tolerance: 50, filter: "🇸🇬|新|坡|SG|(?i)Singapore"}
    - {name: 美国时延优选策略组, type: url-test, include-all: true, interval: 600, tolerance: 50,  filter: "🇺🇸|美|US|(?i)States|American"}
    - {name: 英国时延优选策略组, type: url-test, include-all: true, interval: 600, tolerance: 50, filter: "🇬🇧|英国|伦敦|(?i)UK|United Kingdom"}

# 故障转移策略组
    - {name: 香港故障转移策略组, type: fallback, include-all: true, interval: 600, tolerance: 50, filter: "🇭🇰|港|HK|(?i)Hong"}
    - {name: 台湾故障转移策略组, type: fallback, include-all: true, interval: 600, tolerance: 50, filter: "🇹🇼|台|湾|TW|(?i)Taiwan"}
    - {name: 日本故障转移策略组, type: fallback, include-all: true, interval: 600, tolerance: 50, filter: "🇯🇵|日|东京|JP|(?i)Japan"}
    - {name: 韩国故障转移策略组, type: fallback, include-all: true, interval: 600, tolerance: 50, filter: "🇰🇷|韩国|韓|首尔|(?i)KR|Korea"}
    - {name: 新加坡故障转移策略组, type: fallback, include-all: true, interval: 600, tolerance: 50, filter: "🇸🇬|新|坡|SG|(?i)Singapore"}
    - {name: 美国故障转移策略组, type: fallback, include-all: true, interval: 600, tolerance: 50, filter: "🇺🇸|美|US|(?i)States|American"}
    - {name: 英国故障转移策略组, type: fallback, include-all: true, interval: 600, tolerance: 50, filter: "🇬🇧|英国|伦敦|(?i)UK|United Kingdom"}

# 负载均衡策略组
    - {name: 香港负载均衡策略组, type: load-balance, include-all: true, interval: 600, tolerance: 50, filter: "🇭🇰|港|HK|(?i)Hong"}
    - {name: 台湾负载均衡策略组, type: load-balance, include-all: true, interval: 600, tolerance: 50, filter: "🇹🇼|台|湾|TW|(?i)Taiwan"}
    - {name: 日本负载均衡策略组, type: load-balance, include-all: true, interval: 600, tolerance: 50, filter: "🇯🇵|日|东京|JP|(?i)Japan"}
    - {name: 韩国负载均衡策略组, type: load-balance, include-all: true, interval: 600, tolerance: 50, filter: "🇰🇷|韩国|韓|首尔|(?i)KR|Korea"}
    - {name: 新加坡负载均衡策略组, type: load-balance, include-all: true, interval: 600, tolerance: 50, filter: "🇸🇬|新|坡|SG|(?i)Singapore"}
    - {name: 美国负载均衡策略组, type: load-balance, include-all: true, interval: 600, tolerance: 50, filter: "🇺🇸|美|US|(?i)States|American"}
    - {name: 英国负载均衡策略组, type: load-balance, include-all: true, interval: 600, tolerance: 50, filter: "🇬🇧|英国|伦敦|(?i)UK|United Kingdom"}
  
  # 分流规则 
rule-providers:
    OpenAi:      {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.yaml ,                      path: ./ruleset/OpenAi.yaml       }
    Epic:        {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Epic/Epic.yaml,                  path: ./ruleset/Epic.yaml     }
    Netflix:        {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.yaml,                  path: ./ruleset/Netflix.yaml     }
    BiliBili:    {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BiliBili/BiliBili.yaml ,                  path: ./ruleset/BiliBili.yaml     }
    Bahamut:     {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bahamut/Bahamut.yaml ,                    path: ./ruleset/Bahamut.yaml      } 
    Tiktok:      {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.yaml,                  path: ./ruleset/Tiktok.yaml     }
    Spotify:     {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify.yaml,                  path: ./ruleset/Spotify.yaml     }
    Wechat:     {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/WeChat/WeChat.yaml,                  path: ./ruleset/Wechat.yaml     }
    steam:       {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Steam/Steam.yaml,                          path: ./ruleset/steam.yaml         }
    steamCN:     {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/SteamCN/SteamCN.yaml,                          path: ./ruleset/steamCN.yaml         }
    WebsiteRulesOrDirect:      {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/Phinsin-personal/phinsin-personal-rules/refs/heads/main/WebsiteRulesOrDirect.yaml,                        path: ./ruleset/WebsiteRulesOrDirect.yaml      }
    WebsiteRulesOrGlobal:      {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/Phinsin-personal/phinsin-personal-rules/refs/heads/main/WebsiteRulesOrGlobal.yaml,                        path: ./ruleset/WebsiteRulesOrGlobal.yaml     }
    Youtube:     {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.yaml,                  path: ./ruleset/Youtube.yaml     }
    XiaoHongShu:     {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/XiaoHongShu/XiaoHongShu.yaml,                  path: ./ruleset/XiaoHongShu.yaml     }
    EA:     {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/EA/EA.yaml,                  path: ./ruleset/EA.yaml     }
    Xbox:     {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Xbox/Xbox.yaml,                  path: ./ruleset/Xbox.yaml     }
    hanime1:     {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/Phinsin-personal/phinsin-personal-rules/refs/heads/main/hanime1.yaml,                  path: ./ruleset/hanime1.yaml     }
    Paypal:      {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PayPal/PayPal.yaml,                  path: ./ruleset/Paypal.yaml     }
    Apple:       {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple_Classical.yaml ,              path: ./ruleset/Apple.yaml        }
    Github:      {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub.yaml ,                      path: ./ruleset/Github.yaml       }
    Microsoft:   {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml ,                path: ./ruleset/Microsoft.yaml    }
    Telegram:    {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml ,                  path: ./ruleset/Telegram.yaml     }
    Twitter:     {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Twitter/Twitter.yaml ,                    path: ./ruleset/Twitter.yaml      }
    # Game:        {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game.yaml ,                          path: ./ruleset/Game.yaml         }
    ProxyLite:   {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ProxyLite/ProxyLite.yaml ,                path: ./ruleset/ProxyLite.yaml    }
    Direct:      {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Direct/Direct.yaml ,                      path: ./ruleset/Direct.yaml       }
    Lan:         {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml ,                            path: ./ruleset/Lan.yaml          }
    Download:    {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Download/Download.yaml ,                  path: ./ruleset/Download.yaml     }
    ChinaIP:     {behavior: ipcidr,    interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/soffchen/GeoIP2-CN/release/clash-rule-provider.yml ,                                     path: ./ruleset/ChinaIP.yaml      }
  
  # 分流Policy 
rules:
    - RULE-SET,OpenAi,OpenAi
    - RULE-SET,BiliBili,哔哩哔哩
    - RULE-SET,Bahamut,哔哩哔哩
    - RULE-SET,Netflix,Netflix
    - RULE-SET,Apple,苹果服务
    - RULE-SET,Youtube,Youtube
    - RULE-SET,XiaoHongShu,XiaoHongShu
    - RULE-SET,steamCN,steamCN
    - RULE-SET,steam,steam
    - RULE-SET,Wechat,Wechat
    - RULE-SET,Epic,Epic
    - RULE-SET,Xbox,Xbox
    - RULE-SET,EA,EA
    - RULE-SET,Spotify,Spotify
    - RULE-SET,Tiktok,Tiktok
    - RULE-SET,WebsiteRulesOrDirect,WebsiteRulesOrDirect
    - RULE-SET,WebsiteRulesOrGlobal,WebsiteRulesOrGlobal
    - RULE-SET,hanime1,hanime1
    - RULE-SET,Paypal,Paypal
    - RULE-SET,Github,全球加速
    - RULE-SET,Microsoft,Microsoft
    - RULE-SET,Telegram,电报消息
    - RULE-SET,Twitter,Twitter
    # - RULE-SET,Game,游戏平台
    - RULE-SET,ProxyLite,全球加速
    - RULE-SET,ChinaIP,DIRECT
    - RULE-SET,Direct,DIRECT
    - RULE-SET,Lan,DIRECT
    - RULE-SET,Download,DIRECT
    - GEOIP,CN,DIRECT
    - MATCH,兜底分流
